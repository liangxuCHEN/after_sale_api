"""init

Revision ID: fb8301ba819a
Revises: 
Create Date: 2017-09-01 13:51:52.018751

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fb8301ba819a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('T_AS_AbnormalProduct',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('skuCode', sa.Unicode(length=100), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('waixieOrder_id', sa.Integer(), nullable=True),
    sa.Column('remark', sa.UnicodeText(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text(u'CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text(u'CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('T_AS_DeductionOrder',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('serial_number', sa.Unicode(length=100), nullable=True),
    sa.Column('supplier_name', sa.Unicode(length=100), nullable=True),
    sa.Column('supplier_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('T_AS_DutyReport',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('abnormal_type', sa.Integer(), nullable=True),
    sa.Column('abnormal_reason', sa.UnicodeText(), nullable=True),
    sa.Column('publishment', sa.UnicodeText(), nullable=True),
    sa.Column('publish_to', sa.Unicode(length=50), nullable=True),
    sa.Column('compensation', sa.Integer(), nullable=True),
    sa.Column('duty_to_id', sa.Integer(), nullable=True),
    sa.Column('duty_to', sa.Unicode(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text(u'CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text(u'CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('T_AS_WaixieOrder',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('serial_number', sa.Unicode(length=14), nullable=True),
    sa.Column('type', sa.Unicode(length=100), nullable=True),
    sa.Column('expired_status', sa.Unicode(length=100), nullable=True),
    sa.Column('summited_at', sa.DateTime(), nullable=True),
    sa.Column('material_number', sa.Unicode(length=100), nullable=True),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('workflow_status', sa.Integer(), nullable=False),
    sa.Column('remark', sa.UnicodeText(), nullable=True),
    sa.Column('material_supplier_id', sa.Integer(), nullable=True),
    sa.Column('material_supplier_name', sa.Unicode(length=100), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('customer_name', sa.Unicode(length=100), nullable=True),
    sa.Column('creater_id', sa.Integer(), nullable=True),
    sa.Column('creater_name', sa.Unicode(length=100), nullable=True),
    sa.Column('saler_id', sa.Integer(), nullable=True),
    sa.Column('saler_name', sa.Unicode(length=100), nullable=True),
    sa.Column('reason', sa.Unicode(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text(u'CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text(u'CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('T_AS_Workflow',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=100), nullable=True),
    sa.Column('type', sa.Unicode(length=100), nullable=True),
    sa.Column('service_status', sa.Integer(), nullable=False),
    sa.Column('workflow_status', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text(u'CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text(u'CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('T_AS_Workflow_Journals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=True),
    sa.Column('workflow_type', sa.String(length=100), nullable=True),
    sa.Column('source', sa.Integer(), nullable=False),
    sa.Column('destination', sa.Integer(), nullable=False),
    sa.Column('trigger', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text(u'CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text(u'CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('remark', sa.Text(), nullable=True),
    sa.Column('operator_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('T_PRT_AllProduct',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('itemName', sa.Unicode(), nullable=True),
    sa.Column('skuCode', sa.Unicode(), nullable=True),
    sa.Column('itemCode', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('T_PRT_SupplierBasicInfo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('supplierName', sa.Unicode(), nullable=True),
    sa.Column('IsLogisticSupplier', sa.Boolean(), nullable=True),
    sa.Column('AfterSalerId', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('T_SYS_User',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userName', sa.Unicode(), nullable=True),
    sa.Column('dptNames', sa.Unicode(), nullable=True),
    sa.Column('dptIds', sa.Unicode(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('T_SYS_User')
    op.drop_table('T_PRT_SupplierBasicInfo')
    op.drop_table('T_PRT_AllProduct')
    op.drop_table('T_AS_Workflow_Journals')
    op.drop_table('T_AS_Workflow')
    op.drop_table('T_AS_WaixieOrder')
    op.drop_table('T_AS_DutyReport')
    op.drop_table('T_AS_DeductionOrder')
    op.drop_table('T_AS_AbnormalProduct')
    # ### end Alembic commands ###
